/*
 * Copyright 2010, Google Inc.
 *
 * ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is the GPG Browser Bridge.
 *
 * The Initial Developer of the Original Code is Google Inc.
 *
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Phil Dibowitz <fixxxer@google.com>
 *   Phil Ames <philames@google.com>
 *
 * ***** END LICENSE BLOCK *****
 */

[binding_model=by_value, include="gnupg.h"] class Gnupg {
  Gnupg();
  [const] GpgRetBool IsGpgInstalled();
  [const] GpgRetString GetGnupgVersion();
  [const] GpgRetString SignText(std::string rawtext,
                             std::string keyid,
                             bool clearsign);
  [const] GpgRetSignerInfo VerifySignedText(std::string signed_text,
                                      std::string signature);
  [const] GpgRetEncryptInfo EncryptText(std::string rawtext,
                                  std::string[] keyids,
                                  std::string[] hidden_keyids,
                                  bool always_trust,
                                  std::string sign);
  [const] GpgRetDecryptInfo DecryptText(std::string cipher_text);
  [const] GpgRetBool GetKey(std::string keyid,
                         std::string keyserver);
  [const] GpgRetUidsInfo GetUids(std::string keyid);
  [const] GpgRetString GetFingerprint(std::string keyid);
  [const] GpgRetString GetTrust(std::string keyid);
  [const] GpgRetBool SignUid(std::string keyid, std::string uid,
                             std::string level);
  [const, userglue, plugin_data] GpgRetBool SetConfigValue(std::string key,
                                                           std::string value);
};
